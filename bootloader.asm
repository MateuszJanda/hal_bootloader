[bits 16]                           ; Generate code designed to run on a processor operating in 16-bit mode
[org 0x7c00]                        ; MBR start address


%define EYE_START_COLUMN    27
%define EYE_START_ROW       4
%define EYE_NUM_OF_BLOCKS   25
%define EYE_NUM_OF_LINES    13
; Half block symbol (▄) represented in "code page 437" (IBM PC)
%define EYE_HALF_BLOCK      220

%define TEXT_START_COLUMN   19
%define TEXT_START_ROW      (EYE_START_ROW + EYE_NUM_OF_LINES + 1)
%define TEXT_RED_ON_BLACK   0x04


; Set video mode
mov al, 0x03                        ; Set 80x25 16 color text (CGA, EGA, MCGA, VGA)
mov ah, 0x00                        ; Function BIOS:"Set video mode"
int 0x10                            ; BIOS interrupt call


print_eye:
    mov dh, EYE_START_ROW           ; Set cursor row in 80x25 window
    mov dl, EYE_START_COLUMN        ; Set cursor column in 80x25 window
    mov ah, 0x02                    ; Function BIOS:"Set cursor position"
    int 0x10                        ; BIOS interrupt call

    ; Constant values for:
    ; BIOS:"Write character and attribute at cursor position" (0x09) and
    ; BIOS:"Teletype output" (0x0e)
    mov al, EYE_HALF_BLOCK          ; Character to print: ▄
    mov cx, 1                       ; Number of times to print character - for BIOS:"Write character and attribute at cursor position" (0x09)
    mov bh, 0                       ; Page Number

    ; Temporary values
    mov dl, EYE_NUM_OF_BLOCKS       ; Number of block in row
    mov di, EYE_NUM_OF_LINES        ; Number of rows/lines
    mov si, hal_eye                 ; Pointer to eye graphic
eye_next_block:
    cmp dl, 0                       ; When all block was printed
    je eye_next_line                ; Jump to next line

    mov bl, [si]                    ; Read background (high byte), foreground (low byte) color
    mov ah, 0x09                    ; Function BIOS:"Write character and attribute at cursor position"
    int 0x10                        ; BIOS interrupt call

    mov ah, 0x0e                    ; Function BIOS:"Teletype output". This also move cursor to the right
    int 0x10                        ; BIOS interrupt call

    dec dl                          ; Decrease blocks counter
    inc si                          ; Increment pointer to next byte with background/foreground color
    jmp eye_next_block              ; Jump, and process new block
eye_next_line:
    dec di                          ; Decrease line row/counter
    cmp di, 0                       ; If counter == 0
    je end_print_eye                ; All blocks was printed, jump to end.

    inc dh                          ; Increment, to set cursor in next row
    mov dl, EYE_START_COLUMN        ; Set cursor in same column
    mov ah, 0x02                    ; Function BIOS:"Set cursor position"
    int 0x10                        ; BIOS interrupt call

    mov dl, EYE_NUM_OF_BLOCKS       ; Reset counter value (number of blocks in row)
    jmp eye_next_block              ; Jump, and process new block
end_print_eye:
    nop                             ; Do nothing


print_text:
    mov dh, TEXT_START_ROW          ; Set cursor row in 80x25 window
    mov dl, TEXT_START_COLUMN       ; Set cursor column in 80x25 window
    mov ah, 0x02                    ; Function BIOS:"Set cursor position"
    int 0x10                        ; BIOS interrupt call

    ; Constant values for:
    ; BIOS:"Write character and attribute at cursor position" (0x09) and
    ; BIOS:"Teletype output" (0x0e)
    mov cx, 1                       ; Number of times to print character - for BIOS:"Write character and attribute at cursor position" (0x09)
    mov bh, 0                       ; Page Number
    mov bl, TEXT_RED_ON_BLACK       ; Set default background and foreground color

    mov si, hal_text                ; Pointer to text
text_next_char:
    mov al, [si]                    ; Read character from memory
    cmp al, 0                       ; If char == \0
    je end_print_text               ; End printing

    mov ah, 0x09                    ; Function BIOS:"Write character and attribute at cursor position"
    int 0x10                        ; BIOS interrupt call

    mov ah, 0x0e                    ; Function BIOS:"Teletype output". This also move cursor to the right
    int 0x10                        ; BIOS interrupt call

    inc si                          ; Increment pointer to next character
    jmp text_next_char              ; Jump, and process next character
end_print_text:
    jmp $                           ; Jump to the end


hal_eye:
    db 0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x08,0x08,0x77,0x77,0x77,0x77,0xf7,0xf7,0x37,0x07,0x08,0x08,0x00,0x00,0x00,0x00,0x00,0x00
    db 0x00,0x00,0x00,0x03,0x07,0x38,0x80,0x80,0x00,0x00,0x08,0x07,0x07,0x08,0x08,0x00,0x80,0x80,0x80,0x88,0x07,0x0f,0x00,0x00,0x00
    db 0x00,0x00,0x07,0xf8,0x80,0x08,0x00,0x00,0x00,0x00,0x00,0x08,0x08,0x00,0x00,0x70,0x00,0x00,0x00,0x00,0x80,0x78,0x07,0x00,0x00
    db 0x00,0x86,0x88,0x00,0x07,0x80,0x08,0x00,0x04,0x44,0x40,0x44,0x44,0x44,0x40,0x44,0x04,0x00,0x00,0x00,0x00,0x00,0x88,0x76,0x00
    db 0x00,0x88,0x00,0x00,0x00,0x00,0x04,0x44,0x04,0x44,0x4c,0x4c,0xcc,0x4c,0x4c,0x44,0x04,0x44,0x04,0x00,0x00,0x00,0x00,0x68,0x08
    db 0x00,0x80,0x00,0x00,0x00,0x04,0x44,0x04,0x44,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0x44,0x04,0x44,0x04,0x00,0x00,0x00,0x80,0x00
    db 0x00,0x00,0x00,0x00,0x00,0x44,0x44,0x44,0x44,0xcc,0xcc,0xcc,0xec,0xcc,0xcc,0xcc,0x44,0x44,0x44,0x44,0x00,0x00,0x00,0x08,0x00
    db 0x00,0x88,0x00,0x00,0x00,0x00,0x44,0x04,0x44,0xc4,0xcc,0xcc,0xcc,0xcc,0xcc,0xc4,0x44,0x04,0x44,0x00,0x00,0x00,0x00,0x86,0x00
    db 0x00,0x80,0x06,0x00,0x00,0x00,0x00,0x44,0x04,0x44,0x40,0x44,0x44,0x44,0x40,0x44,0x04,0x44,0x00,0x00,0x00,0x00,0x08,0x80,0x00
    db 0x00,0x00,0x60,0x07,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x44,0x44,0x44,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x8f,0x30,0x00,0x00
    db 0x00,0x00,0x00,0x00,0x80,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x78,0x88,0x00,0x00,0x00
    db 0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x88,0x08,0x08,0x07,0x07,0x07,0x03,0x03,0x07,0x08,0x86,0x88,0x80,0x00,0x00,0x00,0x00,0x00
    db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x60,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00


hal_text:
    db "I'm sorry Dave, I'm afraid I can't do that.", 0


times 510-($-$$) db 0               ; Byte padding
dw 0xaa55                           ; Mandatory magic value - two last bytes to mark this as valid MBR
